plugins {
    id 'opensesame.conventions'
}

java.withSourcesJar()
java.withJavadocJar()

configurations {
    testSource {
        canBeResolved = true
    }
    asmRuntimeClasspath {
        canBeResolved = true
    }
}

dependencies {
    implementation(project(':opensesame-compile')) {
        capabilities {
            requireCapability 'dev.lukebemish.opensesame:opensesame-compile-asm'
        }
    }
    api project(':opensesame-core')
    implementation libs.asm.core

    testSource project(path: ':testtargets', configuration: 'testSource')
    asmRuntimeClasspath project(path: ':opensesame-compile', configuration: 'asmRuntimeElements')
}

// bootstrapping! The javac plugin can use OpenSesame itself via this
def tempClassesDir = layout.buildDirectory.dir("tempClasses/compileJava")
var asmCompileMain = tasks.register('processMainClasses', JavaExec) {
    dependsOn compileJava
    dependsOn configurations.asmRuntimeClasspath
    inputs.dir(tempClassesDir)
    inputs.files(configurations.asmRuntimeClasspath)
    outputs.dir(sourceSets.main.output.classesDirs)
    doFirst {
        sourceSets.main.output.classesDirs.singleFile.deleteDir()
    }
    classpath = configurations.asmRuntimeClasspath
    mainClass.set 'dev.lukebemish.opensesame.compile.asm.VisitingProcessor'
    args = [tempClassesDir.get().asFile.canonicalPath, sourceSets.main.output.classesDirs.singleFile.canonicalPath]
}

tasks.named('compileJava', JavaCompile).configure {
    destinationDirectory.set(tempClassesDir)
}

tasks.named('classes').configure {
    dependsOn asmCompileMain
}

tasks.named('compileTestJava', JavaCompile).configure {
    dependsOn(configurations.testSource)
    source(configurations.testSource)
    options.compilerArgs.add '-Xplugin:OpenSesame'
    dependsOn(tasks.compileJava)
    inputs.files(sourceSets.main.output.classesDirs)
    inputs.files(sourceSets.main.runtimeClasspath)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                openSesameConvention.pomShared(it, 'Javac Compiler Plugin')
                description = 'javac compiler plugin for OpenSesame, a tool for typesafe access to normally inacessible members'
            }
        }
    }
}
