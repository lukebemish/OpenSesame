name: Build Natives
on:
  push:
    branches:
      - natives
jobs:
  build-natives:
    strategy:
      fail-fast: false
      matrix:
        os: [linux, macos, windows]
        arch: [i386, x86_64, aarch64, arm]
        build_type: [Release]
        include:
          - os: linux
            runner: ubuntu-latest
            libname: libopensesamenative.so
            java_home: "$JAVA_HOME_17_X64"
          - os: macos
            runner: macos-latest
            libname: libopensesamenative.dylib
            java_home: "$JAVA_HOME_17_arm64"
          - os: windows
            runner: windows-latest
            libname: opensesamenative.dll
            java_home: "$JAVA_HOME_17_X64"
          - os: linux
            arch: i386
            compiler_package: g++-i686-linux-gnu
          - os: linux
            arch: aarch64
            compiler_package: g++-aarch64-linux-gnu
          - os: linux
            arch: arm
            compiler_package: g++-arm-linux-gnueabi
        exclude:
          - os: macos
            arch: i386
          - os: macos
            arch: arm
          - os: windows
            arch: arm
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup GCC
        if: ${{ matrix.compiler_package }}
        run: sudo apt install -y ${{ matrix.compiler_package }}
      - name: Configure CMake
        run: >
          cmake -B cmakebuild
          -DCMAKE_TOOLCHAIN_FILE=toolchains/${{ matrix.os }}-${{ matrix.arch }}.cmake
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DJAVA_HOME=${{ matrix.java_home }}
          -S ${{ github.workspace }}
      - name: Build
        run: cmake --build cmakebuild --config ${{ matrix.build_type }}
      - if: ${{ matrix.os != 'windows' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: cmakebuild/${{ matrix.libname }}
      - if: ${{ matrix.os == 'windows' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: cmakebuild/${{ matrix.build_type }}/${{ matrix.libname }}
  publish:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    needs: [build-natives]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - run: ./gradlew publish -Pcommit_sha=${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

