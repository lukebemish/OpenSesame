name: Build Natives
on:
  push:
    branches:
      - natives
jobs:
  build-java:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache Bazel
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/bazel
          key: ${{ runner.os }}-bazel-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE', 'WORKSPACE.bazel', 'MODULE.bazel') }}
          restore-keys: |
            ${{ runner.os }}-bazel-
      - run: bazelisk build //java:libopensesamenatives-src.jar
      - uses: actions/upload-artifact@v4
        with:
          name: sources
          path: bazel-bin/java/libopensesamenatives-src.jar
  build-natives:
    strategy:
      matrix:
        platform:
          - os: linux
            runner: ubuntu-latest
            libname: libopensesamenative.so
          - os: macos
            runner: macos-latest
            libname: libopensesamenative.dynlib
          - os: windows
            runner: windows-latest
            libname: opensesamenative.dll
        arch:
          - i386
          - x86_64
          - aarch64
        include:
          - platform:
              os: linux
              runner: ubuntu-latest
              libname: libopensesamenative.so
            arch: arm
        exclude:
          - platform:
              os: macos
              runner: macos-latest
              libname: libopensesamenative.dynlib
            arch: i386
    runs-on: ${{ matrix.platform.runner }}
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Cache Bazel - MacOs
        if: ${{ matrix.platform.runner == 'macos-latest' }}
        uses: actions/cache@v4
        with:
          path: |
            /private/var/tmp/_bazel_runner/
          key: ${{ runner.os }}-bazel-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE', 'WORKSPACE.bazel', 'MODULE.bazel') }}
          restore-keys: |
            ${{ runner.os }}-bazel-
      - name: Cache Bazel - Linux/Windows
        if: ${{ matrix.platform.runner == 'ubuntu-latest' || matrix.platform.runner == 'windows-latest' }}
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/bazel
          key: ${{ runner.os }}-bazel-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE', 'WORKSPACE.bazel', 'MODULE.bazel') }}
          restore-keys: |
            ${{ runner.os }}-bazel-
      - if: ${{ matrix.platform.runner == 'ubuntu-latest' || matrix.platform.runner == 'macos-latest' }}
        run: bazelisk build //cpp:opensesamenatives --platforms=//platform:${{ matrix.platform.os }}_${{ matrix.arch }}
      - if: ${{ matrix.platform.runner == 'windows-latest' }}
        run: bazelisk build //cpp:opensesamenatives --platforms=//platform:${{ matrix.platform.os }}_${{ matrix.arch }}
        shell: pwsh
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.os }}-${{ matrix.arch }}
          path: bazel-bin/cpp/${{ matrix.platform.libname }}