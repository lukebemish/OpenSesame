plugins {
    id 'java-gradle-plugin'
    alias libs.plugins.gradlepublish
}

java.toolchain.languageVersion.set JavaLanguageVersion.of(17)

group = rootProject.group
version = rootProject.version

repositories {
    mavenCentral()
    maven {
        name = 'FabricMC'
        url = 'https://maven.fabricmc.net/'
    }
}

java.withSourcesJar()

dependencies {
    compileOnly libs.jetbrains.annotations
    annotationProcessor(libs.autoservice)
    compileOnly(libs.autoservice)

    compileOnly libs.fabric.loom
    implementation libs.asm

    implementation project(':opensesame-compile')
    implementation(project(':opensesame-compile')) {
        capabilities {
            requireCapability 'dev.lukebemish.opensesame:opensesame-compile-asm'
        }
    }
}

gradlePlugin {
    website = 'https://github.com/lukebemishprojects/OpenSesame'
    vcsUrl = 'https://github.com/lukebemishprojects/OpenSesame.git'

    plugins {
        openSesame {
            id = 'dev.lukebemish.opensesame'
            implementationClass = 'dev.lukebemish.opensesame.plugin.OpenSesamePlugin'
            displayName = 'OpenSesame - Gradle Plugin'
            description = 'Gradle plugin for OpenSesame, a tool for typesafe access to normally inacessible members'
            tags.addAll(['java', 'mapping'])
        }
    }
}

processResources {
    from rootProject.file('LICENSE')
}

if (System.getenv('GRADLE_PLUGIN_KEY')) {
    ext['gradle.publish.key'] = System.getenv('GRADLE_PLUGIN_KEY')
    ext['gradle.publish.secret'] = System.getenv('GRADLE_PLUGIN_SECRET')
}

afterEvaluate {
    publishing.repositories.clear()

    if (System.getenv('PR_NUMBER')) {
        publishing {
            repositories {
                maven {
                    name = 'LocalMaven'
                    url = rootProject.layout.buildDirectory.dir('repo')
                }
            }
        }
    } else if (System.getenv('SNAPSHOT_MAVEN_URL')) {
        publishing {
            repositories {
                maven {
                    name = 'PersonalMaven'
                    url = uri(System.getenv('SNAPSHOT_MAVEN_URL'))
                    credentials {
                        username = System.getenv('MAVEN_USER')
                        password = System.getenv('MAVEN_PASSWORD')
                    }
                }
            }
        }
    } else {
        publishing {
            repositories {
                gradlePluginPortal()
            }
        }
    }
}